create table matches(id int, season int, city varchar(30),match_date date,team1 varchar(30),team2 varchar(30),toss_winner varchar(30),toss_decision varchar(10),result varchar(10),dl_applied int,winner varchar(30),win_by_runs int,win_by_wickets int,player_of_match varchar(50),venue varchar(50),umpire1 varchar(50),umpire2 varchar(50));


LOAD DATA LOCAL INFILE '~/deliveries.csv' INTO table deliveries FIELDS TERMINATED BY ',';

select id, season,team1,team2,toss_winner,winner,player_of_match,venue
from matches;

create table deliveries(match_id int,inning int,batting_team varchar(30),bowling_team varchar(30),over int,ball int,batsman varchar(30),non_striker varchar(30),bowler varchar(30),is_super_over int ,wide_runs int,bye_runs int,legbye_runs int,noball_runs int,penalty_runs int,batsman_runs int,extra_runs int,total_runs int,player_dismissed varchar(30),dismissal_kind varchar(20),fielder varchar(30));

create table teams(team_name varchar(30),home_ground varchar(50));

select batsman,sum(batsman_runs) as runs from deliveries group by batsman order by runs desc;

select batsman,count(*) as innings from (select distinct batsman,match_id from deliveries) as a group by batsman order by count(*) desc;


select a.batsman,a.runs,b.innings from (select batsman,sum(batsman_runs) as runs from deliveries group by batsman order by runs desc) as a,(select batsman,count(*) as innings from (select distinct batsman,match_id from deliveries) as a group by batsman order by count(*) desc) as b where a.batsman=b.batsman;

select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score ;

select z.batsman,max(z.score) as highest_score from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z group by z.batsman order by highest_score desc;

select t.batsman,t.runs,t.innings,u.highest_score from ( select a.batsman,a.runs,b.innings from (select batsman,sum(batsman_runs) as runs from deliveries group by batsman order by runs desc) as a,(select batsman,count(*) as innings from (select distinct batsman,match_id from deliveries) as a group by batsman order by count(*) desc) as b where a.batsman=b.batsman ) as t,( select z.batsman,max(z.score) as highest_score from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z group by z.batsman order by highest_score desc) as u where t.batsman=u.batsman; 

select z.batsman,count(*) as hundreds from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z where z.score >=100 group by z.batsman order by hundreds desc;


select f.batsman,f.runs,f.innings,f.highest_score,g.hundreds from (select t.batsman,t.runs,t.innings,u.highest_score from ( select a.batsman,a.runs,b.innings from (select batsman,sum(batsman_runs) as runs from deliveries group by batsman order by runs desc) as a,(select batsman,count(*) as innings from (select distinct batsman,match_id from deliveries) as a group by batsman order by count(*) desc) as b where a.batsman=b.batsman ) as t,( select z.batsman,max(z.score) as highest_score from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z group by z.batsman order by highest_score desc) as u where t.batsman=u.batsman) as f left outer join (select z.batsman,count(*) as hundreds from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z where z.score >=100 group by z.batsman order by hundreds desc) as g on f.batsman=g.batsman;


create table temp(batsman varchar(30),runs int,innings int,highest_score int,hundreds int);  
update temp set hundreds=0 where hundreds is null;

select batsman,count(*) as sixes from (select batsman,batsman_runs from deliveries)as z where z.batsman_runs=6 group by z.batsman order by sixes desc;



select a.batsman,a.innings,a.runs,a.highest_score,a.hundreds,t.sixes from temp as a left outer join (select batsman,count(*) as sixes from (select batsman,batsman_runs from deliveries)as z where z.batsman_runs=6 group by z.batsman order by sixes desc) as t on a.batsman=t.batsman;


select batsman, count(*) as fours from (select batsman,batsman_runs from deliveries) as v where v.batsman_runs=4 group by v.batsman order by fours desc;


select j.batsman,j.innings,j.runs,j.highest_score,j.hundreds,j.sixes,k.fours from (select a.batsman,a.innings,a.runs,a.highest_score,a.hundreds,t.sixes from temp as a left outer join (select batsman,count(*) as sixes from (select batsman,batsman_runs from deliveries)as z where z.batsman_runs=6 group by z.batsman order by sixes desc) as t on a.batsman=t.batsman ) as j left outer join (select batsman, count(*) as fours from (select batsman,batsman_runs from deliveries) as v where v.batsman_runs=4 group by v.batsman order by fours desc ) as k on j.batsman=k.batsman;



select z.batsman,count(*) as fifties from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z where z.score >=50 and z.score<100 group by z.batsman order by fifties desc;



select x.batsman,x.innings,x.runs,x.highest_score,y.fifties,x.hundreds,x.sixes,x.fours from (select j.batsman,j.innings,j.runs,j.highest_score,j.hundreds,j.sixes,k.fours from (select a.batsman,a.innings,a.runs,a.highest_score,a.hundreds,t.sixes from temp as a left outer join (select batsman,count(*) as sixes from (select batsman,batsman_runs from deliveries)as z where z.batsman_runs=6 group by z.batsman order by sixes desc) as t on a.batsman=t.batsman ) as j left outer join (select batsman, count(*) as fours from (select batsman,batsman_runs from deliveries) as v where v.batsman_runs=4 group by v.batsman order by fours desc ) as k on j.batsman=k.batsman) as x left outer join (select z.batsman,count(*) as fifties from (select batsman,sum(batsman_runs) as score from deliveries group by batsman,match_id order by score) as z where z.score >=50 and z.score<100 group by z.batsman order by fifties desc ) as y on x.batsman=y.batsman;


select player_dismissed, count(*) as outs from deliveries group by player_dismissed order by outs desc;



create table temp2(batsman varchar(30),innings int,runs int,highest_score int,fifties int,hundreds int,sixes int,fours int);

update temp2 set fifties=0 where fifties is null
update temp2 set sixes=0 where sixes is null
update temp2 set fours=0 where fours is null;


select batsman,count(*) as bf from deliveries where is_super_over=0 and wide_runs=0 group by batsman order by bf desc;

select a.batsman,innings,runs,b.bf,highest_score,fifties,hundreds,sixes,fours from temp2 as a left outer join (select batsman,count(*) as bf from deliveries where is_super_over=0 and wide_runs=0 group by batsman order by bf desc ) as b on a.batsman=b.batsman; 

create table batsmen_data(batsman varchar(30),innings int,runs int,bf int,highest_score int,fifties int,hundreds int,sixes int,fours int);

alter table batsmen_data add column sr float;
update batsmen_data set sr=runs/bf;


alter table batsmen_data drop column not_outs;


select a.batsman,a.innings,a.runs,a.bf,a.highest_score,b.not_outs,a.fifties,a.hundreds,a.sixes,a.fours,a.sr from batsmen_data as a left outer join (select player_dismissed, count(*) as not_outs from deliveries group by player_dismissed order by not_outs desc) as b on a.batsman=b.player_dismissed;

create table batsmen(batsmen varchar(30),innings int,runs int,bf int,highest_score int,not_outs int,fifties int,hundreds int,sixes int,fours int,sr float)

update batsmen set not_outs=innings-not_outs;

select bowler,count(player_dismissed) as total_wickets from deliveries where player_dismissed is not null and dismissal_kind!='run out'group by bowler order by total_wickets desc;

select a.bowler,count(*) as innings from (select distinct bowler,match_id from deliveries) as a group by a.bowler order by innings desc;

select bowler,count(*) as balls_bowled from deliveries where is_super_over=0 and wide_runs=0 and noball_runs=0 group by bowler order by balls_bowled desc;

select bowler,sum(total_runs-legbye_runs-bye_runs) as runs_c from deliveries where is_super_over=0 group by bowler order by runs_c desc;

select b.bowler,max(b.innings_wickets) as best_figure from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id) as b group by b.bowler order by best_figure desc; 


select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets;

select bowler,match_id,sum(total_runs-legbye_runs-bye_runs) as runz from deliveries group by bowler,match_id;


select g.bowler,g.match_id,g.innings_wickets,h.runz from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as g , (select bowler,match_id,sum(total_runs-legbye_runs-bye_runs) as runz from deliveries group by bowler,match_id) as h where g.bowler=h.bowler and g.match_id=h.match_id order by g.innings_wickets,h.runz;

select q.bowler,count(*) as four_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets=4 group by q.bowler order by four_wicket_haul desc;


select q.bowler,count(*) as five_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets >4 group by q.bowler order by five_wicket_haul desc;



select u.bowler,u.total_wickets,v.innings from (select a.bowler,count(*) as innings from (select distinct bowler,match_id from deliveries) as a group by a.bowler order by innings desc) as v , (select bowler,count(player_dismissed) as total_wickets from deliveries where player_dismissed is not null and dismissal_kind!='run out' group by bowler order by total_wickets desc) as u where v.bowler=u.bowler order by u.total_wickets desc;


select g.bowler,g.balls_bowled,h.runs_c from (select bowler,count(*) as balls_bowled from deliveries where is_super_over=0 and wide_runs=0 and noball_runs=0 group by bowler order by balls_bowled desc ) as g, (select bowler,sum(total_runs-legbye_runs-bye_runs) as runs_c from deliveries where is_super_over=0 group by bowler order by runs_c desc ) as h where g.bowler=h.bowler;


select s.bowler,s.innings,s.total_wickets,d.balls_bowled,d.runs_c from (select u.bowler,u.total_wickets,v.innings from (select a.bowler,count(*) as innings from (select distinct bowler,match_id from deliveries) as a group by a.bowler order by innings desc) as v , (select bowler,count(player_dismissed) as total_wickets from deliveries where player_dismissed is not null and dismissal_kind!='run out' group by bowler order by total_wickets desc) as u where v.bowler=u.bowler order by u.total_wickets desc ) as s,(select g.bowler,g.balls_bowled,h.runs_c from (select bowler,count(*) as balls_bowled from deliveries where is_super_over=0 and wide_runs=0 and noball_runs=0 group by bowler order by balls_bowled desc ) as g, (select bowler,sum(total_runs-legbye_runs-bye_runs) as runs_c from deliveries where is_super_over=0 group by bowler order by runs_c desc ) as h where g.bowler=h.bowler ) d where s.bowler=d.bowler;


create table temp(bowler varchar(30),innings int,total_wickets int,balls_bowled int,runs_con int);

select i.bowler,i.four_wicket_haul,j.five_wicket_haul from (select q.bowler,count(*) as four_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets=4 group by q.bowler order by four_wicket_haul desc ) as i left outer join (select q.bowler,count(*) as five_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets>4 group by q.bowler order by five_wicket_haul desc ) as j on i.bowler=j.bowler order by j.five_wicket_haul desc;





select temp.bowler,innings,total_wickets,balls_bowled,runs_con,economy,sr,avg,p.five_wicket_haul from temp left outer join (select q.bowler,count(*) as five_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets >4 group by q.bowler order by five_wicket_haul desc ) as p on temp.bowler=p.bowler;

create table bowlers(bowler varchar(30),innings int, total_wickets int,balls_bowled int,runs_con int,economy float,sr float, avg float,fiv_wicket_haul int);

insert into bowlers select temp.bowler,innings,total_wickets,balls_bowled,runs_con,economy,sr,avg,p.five_wicket_haul from temp left outer join (select q.bowler,count(*) as five_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets >4 group by q.bowler order by five_wicket_haul desc ) as p on temp.bowler=p.bowler;

update bowlers set fiv_wicket_haul=0 where fiv_wicket_haul is null;
------------------------------------------------------------------SQL QUERIES--------------------------------------------------------------




[MOST RUNS ALL TIME]

Select * from batsmen;

[MOST SIXES ALL TIME]

select batsmen,sixes from batsmen order by sixes desc;

[MOST SIXES IN AN INNINGS]

select batsman,batting_team as team,bowling_team as against,season,count(*) as sixes from deliveries,matches where batsman_runs=6 and  matches.id=deliveries.match_id group by batsman,match_id,batting_team,bowling_team,season order by sixes desc limit 200;

[HIGHEST INDIVIDUAL SCORE]

select batsman,batting_team as team,bowling_team as against,season,sum(batsman_runs) as individual_score from deliveries,matches where matches.id=deliveries.match_id group by batsman,match_id,batting_team,bowling_team,season order by individual_score desc limit 200;

[HIGHEST STRIKE RATES]

select batsmen,sr as strike_rate from batsmen order by strike_rate desc;

[MOST FIFTIES]

select batsmen, fifties from batsmen order by fifties desc;

[MOST CENTURIES]

select batsmen, hundreds from batsmen order by hundreds desc;

[FASTEST FIFTIES]


[FASTEST CENTURIES]




-----------------------------------------------------------------------------------------------------------------------------------------------

[MOST WICKETS]

select * from bowlers order by total_wickets desc;


[MOST DOT BALLS]

select bowler,count(*) as dot_balls from deliveries where is_super_over=0 and wide_runs=0 and noball_runs=0 and batsman_runs=0 and bye_runs=0 and legbye_runs=0 group by bowler order by dot_balls desc;

[BEST AVERAGE]

select bowler,avg from bowlers where balls_bowled>100 order by avg;

[BEST ECONOMY RATES]

select bowler,economy from bowlers where balls_bowled>200 order by economy;

[BEST BOWLING FIGURES]


[MOST HAT-TRICKS]



[MOST NUMBER OF MAIDEN OVERS]

select a.bowler,count(*) as maidens from (select bowler,sum(batsman_runs+noball_runs+wide_runs) as runs_scored,over,match_id,count(*) as balls_bowled from deliveries group by match_id,bowler,over order by runs_scored) as a where a.runs_scored=0 and a.balls_bowled=6 group by a.bowler order by maidens desc;

[MOST FOUR WICKET HAULS]

 
select q.bowler,count(*) as four_wicket_haul from (select a.bowler,a.match_id,count(*) as innings_wickets from (select bowler,match_id from deliveries where player_dismissed is not null and dismissal_kind!='run out') as a group by a.bowler,a.match_id order by innings_wickets) as q where q.innings_wickets=4 group by q.bowler order by four_wicket_haul desc;







drop trigger batsmen_trigger;
drop table temps;
drop trigger matches_batsman;

create trigger batsmen_trigger after insert on deliveries for each row
begin
update batsmen set runs=runs+new.batsman_runs where batsmen=new.batsman;
update batsmen set bf=bf+1 where batsmen=new.batsman and new.wide_runs=0 and new.is_super_over=0;
update batsmen set sixes=sixes+1 where batsmen=new.batsman and new.batsman_runs=6;
update batsmen set fours=fours+1 where batsmen=new.batsman and new.batsman_runs=4;
end;

create trigger bowler_trigger after insert on deliveries for each row
begin
update bowlers set balls_bowled=balls_bowled+1 where bowler=new.bowler and new.wide_runs=0;
update bowlers set runs_con=runs_con+new.batsman_runs+new.wide_runs+new.noball_runs;
update bowlers set total_wickets=total_wickets+1 where player_dismissed is not null and dismissal_kind!='run out';
update bowlers set economy =6*runs_con/balls_bowled;
update bowlers set sr=balls_bowled/total_wickets;
update bowlers set avg=runs_con/total_wickets;
end;



create table temps(batsmen varchar(30),runzzz int,balls int);

delete from matches where id=890;
drop trigger matches_batsman;
create trigger matches_batsman after insert on matches for each row
begin
insert into temps select batsman,sum(batsman_runs) as runzzz,count(*) as balls from deliveries  where match_id=new.id and wide_runs=0 group by batsman,match_id;
update batsmen left outer join temps on batsmen.batsmen=temps.batsmen set innings=innings+1 where batsmen.batsmen=temps.batsmen;
update batsmen left outer join temps on batsmen.batsmen=temps.batsmen set highest_score=runzzz where runzzz>highest_score and batsmen.batsmen=temps.batsmen;
update batsmen left outer join temps on batsmen.batsmen=temps.batsmen set fifties=fifties+1 where runzzz>=50 and runzzz<100 and batsmen.batsmen=temps.batsmen;
update batsmen left outer join temps on batsmen.batsmen=temps.batsmen set hundreds=hundreds+1 where runzzz>=100 and batsmen.batsmen=temps.batsmen;
update batsmen set sr=runs/bf;
end;

create table deliveries(match_id int,inning int,batting_team varchar(30),bowling_team varchar(30),over int,ball int,batsman varchar(30),non_striker varchar(30),bowler varchar(30),is_super_over int ,wide_runs int,bye_runs int,legbye_runs int,noball_runs int,penalty_runs int,batsman_runs int,extra_runs int,total_runs int,player_dismissed varchar(30),dismissal_kind varchar(20),fielder varchar(30));


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DELIMITER ;
DROP TRIGGER IF EXISTS `my_trigger`;
DELIMITER $$
create trigger my_trigger after insert on deliveries for each row
begin
update batsmen set runs=runs+new.batsman_runs where batsmen=new.batsman;
update batsmen set bf=bf+1 where batsmen=new.batsman and new.wide_runs=0 and new.is_super_over=0;
update batsmen set sixes=sixes+1 where batsmen=new.batsman and new.batsman_runs=6;
update batsmen set fours=fours+1 where batsmen=new.batsman and new.batsman_runs=4;
update bowlers set balls_bowled=balls_bowled+1 where bowler=new.bowler and new.wide_runs=0;
update bowlers set runs_con=runs_con+new.batsman_runs+new.wide_runs+new.noball_runs;
update bowlers set total_wickets=total_wickets+1 where new.player_dismissed is not null and new.dismissal_kind!='run out';
update bowlers set economy =6*runs_con/balls_bowled;
update bowlers set sr=balls_bowled/total_wickets;
update bowlers set avg=runs_con/total_wickets;
end$$
DELIMITER ;
 

